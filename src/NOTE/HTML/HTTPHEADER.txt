HTTP 헤더
HTTP전송에 필요한 모든 부가정보
General 헤더 : 메시지 전체에 적용되는 정보
Request 헤더 : 요청 정보
Response 헤더 : 응답 정보
Entity 헤더 : 엔티티 바디 정보 ex)Content type : text/html content-length

2014년 RFC7230~7235등장
엔티티->표현

협상: 클라이언트가 선호하는 표현 요청
Accept: 클라이언트가 선호하는 미디어 타입 전달
Accept-Charset: 선호하는 문자 인코딩
Accept-Encoding: 선호나는 압축 인코딩
Accept-Language: 선호하는 자연 언어

협상과 우선순위(Quality Values)q값 사용
생략하면 1, 순서대로 우선순위 높은 순서대로 적용
ex)한국어로 페이지 요청을 했을시 한국어가 없는 사이트일경우 기존 언어 중에
우선순위가 높은 언어 적용

협상과 우선순위2
구체적인 것이 우선
ex)text/* text/plain 후자가 우선순위 먼저 가짐

전송 방식(단순, 압축, 분할, 범위)
단순 Content-length
압축 Content-Encoding
분할 Transfer-Encoding (Content-length 넣으면 안됨)
범위 Range 범위 정해서 전송

일반 정보
From : 일반적으로 잘 사용하지 않음 주로 요청에서 사용
Referer : 이전 웹 페이지 주소, 유입 경로 분석 가능 ex)브라우저 뒤로가기
User-Agent : 클라이언트 애플리케이션 정보(크롬, 파이어폭스), 어떤 브라우저에서 장애가 발생하는지 파악 가능
Server : ORIGN 서버의 소프트웨어 정보
Date : 메시지가 발생한 날짜와 시간간

특별한 정보
Host : 필수 헤더 , 하나의 서버에 여러 도메인을 처리해야할 떄
Location : 페이지 리다이렉션
Allow : 허용 가능한 HTTP 메서드 , 405에서 응답에 포함해야함
Retry-After : 503에서 서비스가 언제까지 불가능한지 알려줄수있음 날씨, 초단위료 표기

인증
Authoriaztion : 클라이언트 인증 정보를 서버에 전달
WWW-Authoriaztion : 401 에러시 사용 리소스 접근에 필요한 인증 방법 정의

쿠키
Set-Cookie : 서버에서 클라이언트로 쿠키 전달(응답)
Cookie : 클라이언트가 서버에서 받은 쿠키를 저장하고, HTTP 요청시 서버로 전달
->HTTP는 기본적으로 무상태 프로토콜 클라이언트가 다시 요청하면 서버는 이전 요청을 기억하지 못함
쿠키 저장소에 로그인 정보를 저장하여 다음 요청시 쿠키를 사용하여 유지 가능
(최근에는 광고 트래킹할떄 사용)

세션 쿠키 : 브라우저 종료시 까지만 유지
영속 쿠키 : 해당 날짜까지 유지

쿠키-경로
PATH=/HOME 이 경로를 포함한 하위 경로 페이지만 쿠키 접근

쿠키-보안
Secure : 쿠키는 http, https를 구분하지 않고 전송 이 옵션을 적용하면 https인 경우에만 전송
HttpOnly : XSS 공격 방지, JSP에서 접근 불가
SameSite : XSRF 공격 방지, 요청 도메인과 쿠키에 설정된 도메인이 같은 경우만 쿠키 전송